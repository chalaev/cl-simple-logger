Simple logging system for Common Lisp; currently works only on [[http://www.sbcl.org/][sbcl]], see [[file:other-CLs.org][other-CLs.org]].

* The scope
1. The logging system must be as simple and robust as a hammer.
2. It must support multi-threading and (sometimes simultaneously) receive messages from different lisp programs (e.g., services on a web server).
3. It should be simpler and shorter than any of the projects that would need a logging system.
4. One should never suspect that bugs in his/her projects arise from the logging system.

Examples of other CL log systems: [[https://github.com/7max/log4cl][log4cl]], [[https://github.com/nicklevine/cl-log][cl-log]].

* Prerequisites
It is assumed that [[https://www.quicklisp.org/beta/][quicklisp]] is installed; [[https://www.gnu.org/software/emacs/][emacs]] would help although it is not compulsory.

Unpack [[https://github.com/chalaev/lisp-goodies/blob/master/generated/cl-package.tbz][simple-log.tbz]] into the local quicklisp directory:\\
=tar xjfv simple-log.tbz --directory=$HOME/quicklisp/local-projects/=

* Quick start
Configure the log system before launching the log:
** Create log directory
Under root privileges:
#+BEGIN_SRC shell
adduser shalaev staff
mkdir /var/log/sbcl
chgrp staff /var/log/sbcl
chmod 770 /var/log/sbcl
#+END_SRC
where ~shalaev~ should be replaced with your user name.

** Install the package
Unpack [[file:generated/cl-package.tbz][simple-log.tbz]] into your [[https://www.quicklisp.org/beta/][Quicklisp]] directory:\\
=tar xjfv simple-log.tbz --directory=$HOME/quicklisp/local-projects/=

** Test in an SBCL session
Open [[file:quick-start.lisp][quick-start.lisp]] and evaluate it in an interactive SBCL session.

* Packaging, compiling and testing
(Requires [[https://www.gnu.org/software/emacs/][emacs]].)

In [[file:Makefile][Makefile]],
1. set ~SBCL~ to the path of the [[http://www.sbcl.org/][sbcl]] binary, and
2. set ~quicklispDir~ to the directory where locally created ~server-log~ package will be stored; then
3. ~make~

The ~make~ command
- compiles the test to the small (13mb) binary and copies it to the current directory, and
- tests the code by running it in interpreting mode.

The compiled binary can be found in the [[file:generated/][generated/]] directory.

Notes:
1. [[file:Makefile][Makefile]] requires
   1. [[https://www.gnu.org/software/emacs/][emacs]] for generating the source code files in the  [[file:generated/][generated/]] directory from [[file:simple-log.org][simple-log.org]] with the =M-x org-babel-tangle= command, and
   2. =printangle= function defined in [[https://github.com/chalaev/lisp-goodies/blob/master/generated/dot.emacs][lisp-goodies/dot.emacs]] file.
2. Unless you have manually compiled [[http://www.sbcl.org/][sbcl]] with =sh make.sh --with-sb-core-compression= command,
   the resulting binary will be several times larger than 13mb.

* Files
1. [[file:README.org][README.org]] generates =README.md= for [[https://notabug.org/shalaev/cl-simple-logger][notabug]] and [[https://github.com/chalaev/cl-simple-logger][github]].
2. [[file:simple-log.org][simple-log.org]] contains the code from =generated/*= together with explanations.
3. [[file:goodies/macros.lisp][macros.lisp]] is copied from the [[https://notabug.org/shalaev/lisp-goodies][lisp-goodies]] project.
4. [[file:Makefile][Makefile]] is needed to test the changes made to the code; it
   1. uses ~emacs~ to generate the source code from the ~.org~ file,
   2. launches [[file:generated/example.lisp][generated/example.lisp]] in interpreting mode, and
   3. compiles [[file:generated/example.lisp][generated/example.lisp]] into ~generated/example.bin~.
   4. creates [[file:simple-log.tbz][simple-log.tbz]]
5. [[file:other-CLs.org][other-CLs.org]] contains a note about making the code compatible with other CL dialects. (This does not seem to be hard.)
6. [[file:helpers/][helpers/*]] assist compilation.

* License
This code is released under [[https://mit-license.org/][MIT license]].

* Support
You can support this project by sending
1. comments/questions to [[mailto:oleg@chalaev.com][oleg@chalaev.com]] and
2. donations via [[https://liberapay.com/shalaev/donate][liberapay]] or [[https://www.paypal.com/paypalme/chalaev][paypal]].
